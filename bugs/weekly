LP15 /srv/html/ibm/stable

48203546

[root@ltczhyp1 ~]# cat /etc/resolv.conf 
nameserver 9.152.120.241
search boebenlingen.de.ibm.com
[root@ltczhyp1 ~]# 


installdriver --system ltczhyp1 --image KVMIBM-1.1.1-beta3.3 --pid root2

installdriver --list

pass4root

bugs interlock
135473	BaseOS	P1	high	ASSIGNED	Fix Submitted	Story 71322: PCR 71322 : including lsb_release support 

1. Gathered weekly vulcan bug statistics and created the report slide.
2. Pushed FAT bugs to be verified.
3. Sent daily bugs summary.
4. Drive bugs to be fixed.
5. Closed all the outdated track bugs.
6. Reported bug status in the interlock meeting.
7. Adjusted the target milestone of vulcan bugs.

1. Gathered weekly vulcan bug statistics and created the report slide.
2. Pushed FAT bugs to be verified.
3. Sent daily bugs summary.
4. Drive bugs to be fixed.

kdump
4500

1. Work on kdump bugs:
	[vulcan][zfrobisher-installer][PATCH] Fix the wrong display of kdump config
2. Gathered weekly vulcan bug statistics and created the report slide.
3. Pushed FAT bugs to be verified.
4. Sent daily bugs summary.
5. Introduce vulcan bugs status in interlock meeing.
6. Disscussed the new added field in screening meeting.

1. Changed the vulcan bugs statistic template.
2. Gathered weekly vulcan bug statistics and created the report slide.
3. Pushed four Base OS FAT bugs to be verified.
4. Collected fixed bugs/ known issues of RC1.
5. Updated the bug process wiki		
  1) adding the work flow of verifying fix.
  2) clarifying that "SUBMITTED" and "ACCEPTED" status are not currently used.


lnxtp4a.boeblingen.de.ibm.com 

Thu Dec  3 15:22:13 CST 2015
1. Created two patches for kdump:
	[Vulcan][PATCH] Add kdump size in generating kickstart file 
	[Vulcan][PATCH] Improve the accuracy of kdump size upper limit
2. Gathered statistics of vulcan bugs
3. Drove bug screening
4. Went through all Vulcan bugs for discussion
5. Reviewed the test case of swap encryption.

Tue Nov 27 13:20:31 CST 2015

1. Gathered statistics of vulcan bugs
2. Filed a request in bugzilla to add "Sub Status"
3. Drove bug screening:
	FAT bugs: 22
	Closed/Rejected: 10
4. Investigate the DOU between zfrobisher and MCP
5. Created a proposal about bugs fixing process with MCP


Fri Nov 13 13:54:53 CST 2015

1. Created two patches for kdump:
[Vulcan][PATCH v1] Add the check of character input in the Kdump size field
[Vulcan][PATCH] Fix the problem of kdump size scope inaccuracy

2. Worked with LTC Tools team to customize bugzilla for frobisher family: 
#24091	Need to add a field of "Target Date"
#24103	Request to add a new field of "Bug Type"
#24115	Request to add a new status of "Fiexed"

3. Drove bug screening:
New open: 10
Closed/Rejeced: 19

4. Update bug process wiki


1. Created one patch for kdump:
[Vulcan][PATCH] Add parameter check of kdump configuration when submitting

2. Worked with LTC Tools team to customize bugzilla for frobisher family 

3. Drove bug screening:
New open: 12
Closed/Rejeced: 20

4. Update bug process wiki
https://ltc3.linux.ibm.com/wiki/Frobisher/Process/Bug_Support



Greetings,

I am an engineer from Frobisher Developement team right now focusing on the
Vulcan bug screening. I have been working for weeks to explore this bug fixing
process and trying to improve it.

As the first effort to achieve this, I have updated the wiki page as below link for
futher discussion.

https://ltc3.linux.ibm.com/wiki/Frobisher/Process/Bug_Support.

In the wiki, we define six roles including Bug Reporter, Bug Screener, Component
Owner, Bug Owner, Bug Screener Focal and QA Contact. After giving a brief
introduction of each role, we describe the responsibility of them one by one in
details. Then we provide a typical workflow of bug process, starting from filing
a new bug and ending with closing the bug. The next two sections are component
interface table for kronos and vulcan. Except for section nine and section ten
which are added to explain how to set target milestone/ target date and bug
type, the following sections are basically the same as original. Our intention
is to make everyone related to the bug process easily recognize his role and
clear about what actions he should take or to whom he can turn for help.

Another effort to imporve the frobisher bug process is that we managed to add
two fields, "Target Date" and "Bug Type", in bugzilla. The former one is used to
indicate the date by which the bug should be fixed. We used to use the "Target
Milestone" field to do this task, but the release date of target milestone is
often uncertain. The bug owner may not be sure whether the next milestone is in
the next week or even one month away. By adding this field of date type, we can
get the date of deadline directly, and avoid the risk of delay of fixing process
more effectively. The latter one is used to identify the type of a bug amongst
"Defect", "Enhancement" or "Requirement". Therefore we can easily gather
statistics as how many bugs in vulcan are defect and how many are enhancement.

More details are expressed in the wiki page, please have a look and give
suggestions. Any comment will be welcome!

Thanks!



The investigation of setting target date:

A: Add a "Target Date" field
The best and simplist way is adding an extra field to track the target date, but
right now we have no authority to customize the layout of bugzilla, so we can
not achieve this by ourselves. I have reflected this to the LTC tools team by
filing a request in the LTC Request Tracker and now being waiting for their feed back.

B: Put the target date info in the white board
I also discussed with wenyi about adding tag in the white board and then search
by matching string. This may work well if we limit the input in the white board,
but under some situations people will add some other notes in the white board,
making it difficult to do string match.

C: Break down the target milestone
Current target milestone presents major versions and spans too long, and we can
break them down into miner versions.  If we can have a relatively fixed circle
of miner driver delivery, for example, each version per week, then we can easily
deduce the target date from the target milestone.

D: Create a wiki page to record the date
The fourth method is to use a separate wiki to record the version and its
corresponding target date, and manualy track them. This is also how fedora qa
team runs, refering to:
http://fedoraproject.org/wiki/Releases/23/Schedule

So my suggestion is that if the LTC tools team can help us add the field, it
would be best. If not we can try the method C, if also fails we can use method D
which can work around this until we find a better solution in the future.



bug screener:
1. The bug screener will receive an email when a new bug of his component is
filed. The screener needs to collect sufficient information to identify the bug,
set the target milestone and then assign it to the default bug owner.

2. The bug screener will track the status of the bugs of his component and
communicate with the bug owner or developer to make sure the bug can be fixed
and tested in time. Close the bug once the bug has been tested or rejected.

bug owner:
is the person who is responsible to take care of the bug. The owner may directly
handle the bug or assign the bug to some others who will work on this.

bug focal:
The bug focal focus on the big picture, gather statistics and make out bug
reports. Communicate with bug screeners to make sure critical bugs will be taken
care of promptly.


increased to 87 from about 60.
closed:

 You are not authorized to access bug #128576. 128981

Fri Nov  6 10:36:13 CST 2015
1. Gathered statistic of vulcan bugs.
2. Investigate how to set target date and filed a request against LTC tools.
3. Discussed and updated the wiki of screening process.
   [zfrobisher] [Vulcan][PATCH] Make the time changed with selected timezone when reboot
4. Reviewed one patch.
   [zfrobisher] [Vulcan][PATCH] Make the time changed with selected timezone when reboot
5. Drived vulcan bugs solution.

1. Closed/Rejected 20 vulcan bugs.
2. Pushed vulcan bugs.
3. Verified several bug fix patches in Beta 3.3.
4. Create a statistic report of vulcan bugs.
5. Study TP4 installation.


1. Verify/Push/Assign vulcan bugs.
2. Reviewed one patch:
	[zfrobisher] [[master][dracut][patch]] Fix bug 129098 Logs may contain pass
3. Filed a bug against bugzilla
	https://bugzilla.linux.ibm.com/show_bug.cgi?id=130980



1. Assigned vulcan bugs to bug screeners.
2. Pushed vulcan bugs of 'need info'.
3. Closed sevral vulcan bugs.
4. Went through vulcan bugs again and agin.



qume,kvm,libvirt	sibo
network,kernel		huawei
baseOS				zhiguo,zongxiong,zhiguo
build				liumei
hpm					zhangyan
installer			wenyi
guestOS				klaus

As we are getting close to GA'ing Kronos, our next release (Vulcan) will come
into focus.
Yesterday I was looking into our BZ/defect backlog for Vulcan. We currently have
91 defects in an "active" state:
- 33 are in OPEN
- 41 are in ASSIGNED
- 9 are in NEEDINFO
- rest in FIXEDAWAITINGTEST and REOPENED

I think the overall number is very high and what also concerns me is that 33 are
in OPEN - which means that we did not do the early investigation to assign it to
a team. Also that we have 41 in ASSIGNED state may be a reflection
of the focus on Kronos, but I think it also bears the risk that the teams are
working on too many items in parallel and are missing some guidance. I believe
that we do need a focussed effort on our defect backlog, which has the following
elements:
- get the OPEN ones analyzed/confirmed and assigned to the right teams
- disposition the defects overall, i.e. which ones are really important to be
  fixed versus the ones we could just drop; this will allow us and all the
involved teams to focus on the correct ones;
- start building plans (using tracker bugs) as to which defects we want to fix
  in the next internal drivers and interact directly with the responsible
development focal points  

1. Sent patches:
   [Vulcan][PATCH] adding a help screen of kdump
   [Vulcan][PATCH] add support of kdump command in kickstart
2. Bug Screen.
   Closed several bugs which have been tested.
   Work on bugs status report.
3. Kdump design document.
   Sent out the v3 of design document.

1. Break down the task of kdump in system.
2. Discuss with Viktor about the update of kdump design document.
3. Work on adding support of kdump in kickstart.
4. Add a help screen of kdump.
5. Vulcan bug assignment.

1. Bugs
    [Bug 128818] [R-Test] Installation exited with error code: KVMIBMCO03013 - duplicate of #128331 and has been fixed.
    [Bug 128780] [R-Test] Misleading wording in "Consistency Check for
    [Bug 128786] [R-Test] Warning about LVM on supposedly unselected disk
    [Bug 128529] [R-Test] Installation to SCSI zFCP device failed - fix in blivet: recursiveRemove all disks
    [Bug 128340] [R-Test] Fail to add zfcp device during install (sysfs path incorrect) - not a bug
    [Bug 127691] Error message when adding via "add zFCP" ( 1.2.0-Beta2.1) - not a bug
2. Patches
 [Vulcan][PATCH] Add "BUILD_ID" in /etc/os-release                          
 [Vulcan][PATCH v2] Fix the problem of display wrong disk in consistency che
 [Kronos][PATCH V2] Fix 128529: Installation to SCSI zFC
 [Vulcan][PATCH] Add the path of gpgkey RPM-GPG-KEY-KVM-FOR-IBM in repo     
 [Vulcan][PATCH] Recursive remove all disks user selected before partitionin
 [Vulcan][PATCH] Enable GPG check of repo                                   
 [Vulcan][PATCH] Change Version number from "1.2.0" to "1.1.1"              
 [Vulcan][PATCH] Remove the invoke of refreshProductInfo()  
3. Sent out kdump design document to Germany team for review.


https://bugzilla.linux.ibm.com/show_bug.cgi?id=128924 
	add a () in consistency check
[Bug 128529] [R-Test] Installation to SCSI zFCP device failed - 
	fix in blivet: recursiveRemove all disks
update installer with shell
reply to the feed back of kdump design doc.


1. Vulcan bugs process
   a. correct bugs' status
   b. Sent out vulcan bug report
2. Kdump development
   a. Sent out kdump design document v3
     1) adding the explantation of size scope
     2) adding some screen shot of verifying kdump
   b. Sent patch
     [Vulcan][PATCH v2] Add support of kdump
3. Trace bugs:
   [Bug 128042] partitioning menu unclear message in VG Consistency Check for
Deletion -- not a bug
   [Bug 128340] [R-Test] Fail to add zfcp device during install (sysfs path
incorrect) -- sent patch:[Kronos][PATCH] Correct the scsi path in offlineSCSIDevice()


1. Improve kdump functions
    Adding memory size scope setting
    Adding parameter checking
2. Sent patches:
    [Kronos][PATCH] Improve the display of VG consistency checking
    [Vulcan][PATCH v1] Add support of kdump
3. Sent out design document v2 of kdump
4. Work on Vulcan bugs report


1. Trace the root cause of the name conflict issue.
2. File a bug on redhat bugzilla about blivet's name list.
	https://bugzilla.redhat.com/show_bug.cgi?id=1245038
3. Sent patch:
	[Kronos][PATCH v2] Improve existing name list to work around bug 127696
4. Work on kdump
	sent out design document
    integrate with installer code

Todo:
  add kdump info to summary form.



1. Tested the kdump of RHEL 7.1 anaocnda on Z.
2. Studied on kdump and designed the UI. 
3. Worked on the bug of failing to add scsi disks. 
4. Verified the patch of time zone and closed the bug 126833.


1. Investigate time zone issue
    test Fedora 22 for x86_64 on kvm
    test RHEL 7.1 for x86_64 on kvm 
    test RHEL 7.1 for x86_64 on lpar (ongoing) 
2. Compare the difference between redhat bugzilla and ltc bugzilla
3. Explore kdump feature in RHEL 7.1
4. Sent patches:
    [Vulcan][PATCH] Revert "Fix the problem of time zone (bug #126833)"
    [Kronos][PATCH v2] Revert "Fix the problem of time zone (bug #126833)"

1. Sent patches:
[Vulcan][PATCH v2] Fix the problem of time zone (bug #126833)
[Vulcan][PATCH] Move the setting up of yum repo from post shell into instal
[Kronos][PATCH] Remove the call of refreshProductInfo()




1. File a bug on time zone:
    Bug 126833 - time zone fail to configure correctly
2. Sent patches:
    [Vulcan][PATCH] Correct the scsi path in offlineSCSIDevice()
    [Vulcan][PATCH v3] Add support for rescue mode
    [Kronos][PATCH] Fix the problem of time zone (bug #126833)






1. reviewed the patch of fixing the size issue on blivet 0.61
2. file a bug
	Bug 125169 - Installer crash after creating partitions
3. create a patch on blivet to fix Bug 125169
4. investigate the scheme of rescue mode in anacoda


1. Completed the draft design of rescue mode
2. Completed basic UI of rescue mode and invoking shell
3. Working on finding existing installations  

1. Integrated rescue mode into installer.
2. Tested rescue mode on lpar.
3. Working on problem of 'fail to unmount' on some weird dasds.
