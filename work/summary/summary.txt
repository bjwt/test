1. Self introducion
   education back ground
   work experience
   projects: frobisher eshop
   technichs: python, linux, etc
   
2. Projects
	frobisher
	eshop
3. Programming language: 
    Python 
    Shell esp:sed awk
	SQL
4. Data structure and Algorithms:
	 LList:
     String
	 Bitree:
     Sort
     Search
5. Design Pattern
6. Linux *
  common tools: gprof, gcov, make, gdb, gcc
* familiar with linux system api
  file:	open(), read()
  question:  why fail to create a file with other write authority by open() and set S_IWOTH
  answer: it also rely on the umask configure, which is defined in /etc/profile
* multiply thread programming
* socket programming

others:
6. The most impressive challenge
7. The greatest contribution/ excellent work
8. Describe the procedure of booting
9. The plan for the next few years?
   A: Make personal technic and interest most match with department goal

C -> C++
Python
[Shell, Sed and Awk]
Linux API
[Git, gdb, make]
Data Structure
Network


Write programs:
implement some built in functions in c or in python
  implement strcpy() in c
data structure
  list:
    revert a link list in python
    determine whether a link-list has a loop
    how to judge whether two linklists will cross?
  tree:
    in-order reverse of bi-tree
    pre-order reverse of bi-tree
    post-order reverse of bi-tree
  sort:
    insertion sort
	shell sort
	bubble sort
	fast sort
	selection sort
	heap sort
  string:
     implement strcpy, strstr
	KMP and BM

Design Pattern:
  six principles
  tweenty three patterns

C:
	The C programming language, pointers on c, Expert C programming, C traps and pitfalls
	1. Data
	short: 2 Byte  -32768 ~ 32767
	int : 4 Byte -2147483648 ~ 2147483647	
	long: 8 Byte -9223372036854775808 ~ 9223372036854775807
	long long: 8 Byte
	float : 4 Byte
	double: 8 Byte
	char:	1Byte
	unsigned
	signed
	_Bool
	_Complex
	_Imaginary
	sizeof()
  stack
  heap
  static

python:
	Learning Python, Core python programming, python cookbook
  list
  dict
  tuple
  copy- deep copy and shalow copy
  decorator
  class
  yum install python-pip
  libs:
      blivet,django,scrapy


linux 
  bash:
	system administration
    cp a.txt{,2}
    tricks:
    cd /var/log || { echo "Cannot change to necessary directory." >&2 ; exit $E_XCD;}
    cd may fail
    use { code block} > file   to redirect all output
    command &>filename redirects both the stdout and the stderr of command to filename.
    type bogus_command &>/dev/null
    sed
      i n h H
    awk
  git:
    push pull clone add commit reflog 
	git tag
	git reset --soft --mixed --hard
    git fetch -v
	git merge 
	git rebase
	git add .
	git add -A
	git log --pretty=oneline --author --since
	git stash pop/list/apply (use git add . first)
	git shortlog -s -n (sort authors by commit)
	git clean -f -x/-X/-e/-q
	git clean -f -d (clean dirs)
	git rev-parse HEAD (display commit id)

  tar: 
	extract to other dir:   tar zxvf a.tar.gz -C path/to/dir

  shell:
    cursor jump back a word: Esc+B 
    cursor jump forward a word: Esc+F 

  api:

    list the contents of rpm:
		rpm -qpl *.rpm
    extract rpm:
		rpm2cpio *.rpm | cpio -div


projects:
  user ording system
  blivet - a python program to manage partition.


English:
	rebel stuffy stumble patriot traitor impede tamper condemn scandal stun
	tragedy overtake distraught inconsolable honest farewell repatriate intact
	bond sole decline recline cosy dispute standoff evacuate reformer dictator
	sanction separatist unrest religion regional condolence casualty

	lash out at-	stay put-

cmd:
	as bc dig objdump hexdump readelf strace cal df du ls date touch who last w
	whoami yum uname

	system managerment:
		sysctl	
	others:
		grep -r abc *       #grep from all the sub directories
		bc: obase=16;ibase=16 tips:must set obase first.
			obase=16;ibase=A	  should be 'A' rather than '10'
			scale=5				  3/5=.60000
		pdftk nce4.pdf cat 1 5 output 2.pdf #extracting page 1 and page 5 from
											#nce4.pdf into a new 2.pdf
		netstat -natp
		lsof -i :80
    tshark:
    	tshark -i br0 -w a.cap -f 'port 8080'
    	tshark -xVr a.cap | less
    vi:
    	<C-o> + zz  "quickly draw screen to the middle"
		display  at the end of files:
			:e ++ff=unix %
			or `cat -v file'
		g0,g^,gm,gj,gk,n$,%,f,F,t,T,ctrl-o,ctrl-t,ctrl-],(,)
		zz,zt,zb
		H,M,L
		ge,gE
        :TOhtml
    screen
        set screen under `gnu screen' refresh after quitting from vim and some other tools.
       	    uncomment the `altscreen on' in the `/etc/screenrc' file.
        pageup in gnu screen
        	C-A Esc
    man-pages:
       if can not `man 2 open` etc, can exectue `sudo yum install man-pages`.
	calibre:
		ebook-convert nce.html nce.mobi --authors 'Wu Tao' --cover nce4.jpg --share-not-sync --title "New Concept Englist" --mobi-toc-at-start --level1-toc '//h:h1' --level2-toc '//h:h2'
		ebook-viewer nce.mobi


C primer plus
sudo yum install python-pip
 pip install bae
 bae login

Access Key ID: fa990781e67f42b0b3b813c4f7ab398a
Secret Access Key: edd5fcf75e0c4090a91668df84e80b4f

git clone https://git.duapp.com/appid4aa7frkod0
id: 13811803528
pswd: wutaosa...
yum install git-email 

git config --global user.name "Tao Wu"
git config --global user.email bjwt@linux.vnet.ibm.com
git config --global sendemail.smtpserver ap.relay.ibm.com
git config --list

git help reset
git reset --help
man git reset

#git or #github channel on the Freenode IRC server

git clone git@git.linux.ibm.com:zfrobisher/zfrobisher-installer.git
git clone git://github.com/schacon/grit.git mygrit
git checkout -b zfrobisher origin/zfrobisher

git rm --ceched

git format-patch -M master

git format-patch -M remotes/origin/zfrobisher

git commit -v

#git send-email --to zfrobisher@linux.vnet.ibm.com 0002-fix-the-path-problem.patch 
git commit -s -m "fix the path problem"
git format-patch -M remotes/origin/zfrobisher
git send-email --to  zfrobisher@lists.linux.ibm.com 0002-fix-the-path-problem.patch 
